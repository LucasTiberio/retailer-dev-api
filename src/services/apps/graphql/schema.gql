extend type Mutation {
  savePlugForm(input: SavePlugFormInput!): Boolean! @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
  editPlugForm(input: EditPlugFormInput!): Boolean! @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
  uploadInvoice(input: UploadInvoiceInput!): Boolean! @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
  receiveInvoice(input: ReceiveInvoiceInput!): Boolean! @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
  changeDefaultCluster(input: ChangeDefaultClusterInput!): Boolean! @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
  updateUserCluster(input: [UpdateUserClusterInput]!): Boolean! @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
  generateAffiliateCoupon: HublyCoupon @hasServiceRole(role: ["ANALYST", "SALE"], serviceName: "affiliate") @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
}

extend type Query {
  getPlugForm: PlugFormPayload! @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
  getInvoice(input: GetInvoiceInput!): HublyInvoicePayload! @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
  getInvoices(input: GetInvoicesInput!): [HublyInvoicePayload]! @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
  getUserCluster(input: GetUserClusterInput!): HublyClusterPayload! @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
  getUsersPlugForm: [PlugFormPayload]! @hasOrganizationRole(role: ["ADMIN"]) @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
  getAffiliateCoupon: HublyCoupon @hasServiceRole(role: ["ANALYST", "SALE"], serviceName: "affiliate") @organizationPaidVerify @isVerified @acceptTermsAndConditions @isAuthenticated
}

type PlugFormPayload {
  id: String!
  userId: String!
  user: User
  organizationId: String!
  fields: [PlugFormField]!
  installedApp: OrganizationAffiliateStoreApp!
  validated: Boolean
}

type User {
  username: String
  email: String
  document: String
}

type PlugFormField {
  label: String!
  value: String!
}

input SavePlugFormInput {
  fields: [PlugFormFieldInput]!
  installedApp: String!
}

input PlugFormFieldInput {
  label: String!
  value: String!
}

input GetPlugFormInput {
  installedAppId: String!
}

input EditPlugFormInput {
  id: String!
  fields: [PlugFormFieldInput]
  validated: Boolean
}

input ReceiveInvoiceInput {
  id: String!
  received: Boolean!
}

input UploadInvoiceInput {
  id: String
  data: Upload!
  mimeType: String!
  month: String!
  year: String!
}

input GetInvoiceInput {
  year: String
  month: String
}

input GetInvoicesInput {
  year: String
  month: String
}

input ChangeDefaultClusterInput {
  cluster: String!
}

input GetUserClusterInput {
  affiliateId: String!
}

input UpdateUserClusterInput {
  affiliateId: String!
  cluster: String!
}

type HublyClusterPayload {
  organizationId: String!
  affiliateId: String!
  name: String!
}

type HublyInvoicePayload {
  id: String!
  organizationId: String!
  userId: String!
  month: String!
  year: String!
  url: String!
  received: Boolean!
}

type HublyCoupon {
  affiliateId: String!
  organizationId: String!
  campaignId: String!
  coupon: String!
  sequence: Int!
  active: Boolean
}