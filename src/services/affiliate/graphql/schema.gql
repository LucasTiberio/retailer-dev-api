extend type Mutation {
  affiliateGenerateShortenerUrl(input: AffiliateGenerateShortenerUrlInput!): UserOrganizationServiceRolesUrlShortener!
    @hasServiceRole(role: ["ANALYST"])
    @organizationPaidVerify
    @acceptTermsAndConditions
    @isVerified
    @isAuthenticated
  handleOrganizationCommission(input: HandleOrganizationCommissionInput!): OrganizationCommission!
    @hasOrganizationRole(role: ["ADMIN"])
    @organizationPaidVerify
    @acceptTermsAndConditions
    @isVerified
    @isAuthenticated
  generateSalesJwt(input: GenerateSalesJwtInput!): SalesSession!
  createAffiliateBankValues(input: CreateAffiliateBankValuesInput!): UserOrganizationService! @hasServiceRole(role: ["ANALYST"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  generateSalesShorten(input: GenerateSalesShortenInput!): ShortenerUrl! @hasSalesToken
  paidAffiliateCommission(input: PaidAffiliateCommissionInput!): Boolean @hasOrganizationRole(role: ["ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  handleTimeToPayCommission(input: HandleTimeToPayCommissionInput!): TimeToPayCommission!
    @hasServiceRole(role: ["ADMIN"])
    @organizationPaidVerify
    @acceptTermsAndConditions
    @isVerified
    @isAuthenticated
  handleDefaultCommission(input: HandleDefaultCommissionInput!): DefaultCommission! @hasServiceRole(role: ["ADMIN"]) @organizationPaidVerify @acceptTermsAndConditions @isVerified @isAuthenticated
}

input HandleOrganizationCommissionInput {
  identifier: OrganizationCommissionIdentifier!
  identifierId: String!
  commissionPercentage: Float!
  active: Boolean!
}

type OrganizationCommission {
  id: String!
  identifierId: String!
  identifier: OrganizationCommissionIdentifier!
  commissionPercentage: Float!
  active: Boolean!
  name: String
  type: String!
  updatedAt: Datetime!
  createdAt: Datetime!
}

input HandleTimeToPayCommissionInput {
  days: Int!
}

input HandleDefaultCommissionInput {
  percentage: Float!
}

input PaidAffiliateCommissionInput {
  affiliateCommissionSetPaid: [AffiliateCommissionSetPaid]!
}

input AffiliateCommissionSetPaid {
  _id: String
  affiliateId: String!
  orderId: String!
}

type SalesSession {
  salesId: String!
  vtexSalePixelJwt: String!
}

input GenerateSalesShortenInput {
  url: String!
}

input GenerateSalesJwtInput {
  email: String!
  organizationId: String!
  serviceName: ServiceName!
}

type TimeToPayCommission {
  id: String!
  days: String!
  type: String!
  updatedAt: Datetime!
  createdAt: Datetime!
}

type DefaultCommission {
  id: String!
  percentage: Float!
  updatedAt: Datetime!
  createdAt: Datetime!
}

type AffiliateBonification {
  title: String!
  goal: Float!
  currentValue: Float!
  endDate: String!
}

extend type Query {
  timeToPayCommission: TimeToPayCommission! @hasServiceRole(role: ["ANALYST", "SALE", "RESPONSIBLE", "ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  defaultCommission: DefaultCommission! @hasServiceRole(role: ["ANALYST", "SALE", "RESPONSIBLE", "ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getOrganizationCommissions: [OrganizationCommission]! @hasOrganizationRole(role: ["ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getOrganizationCommissionsName: [OrganizationCommissionName]! @hasOrganizationRole(role: ["ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getOrganizationCommissionsSellerName: [OrganizationCommissionName]! @hasOrganizationRole(role: ["ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getOrganizationCommissionsCategoriesName: [OrganizationCommissionName]! @hasOrganizationRole(role: ["ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getOrganizationCommissionsAffiliatesName: [OrganizationCommissionName]! @hasOrganizationRole(role: ["ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getAffiliateAvailableBonifications: [AffiliateBonification]! @hasServiceRole(role: ["ANALYST", "SALE"], serviceName: "affiliate") @acceptTermsAndConditions @isVerified @isAuthenticated
  listAffiliateShorterUrl(input: ListAffiliateShorterUrlInput!): [UserOrganizationServiceRolesUrlShortener]!
    @hasServiceRole(role: ["ANALYST"])
    @organizationPaidVerify
    @acceptTermsAndConditions
    @isVerified
    @isAuthenticated
  getAllOrganizationOrders(input: GetAllOrganizationOrdersInput): AllOrders! @hasOrganizationRole(role: ["ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getOrganizationOrdersByAffiliateId(input: GetOrganizationOrdersByAffiliateIdInput): AllOrders! @hasServiceRole(role: ["ANALYST", "SALE"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getOrganizationRevenue(input: GetOrganizationRevenueInput): OrganizationRevenue! @hasOrganizationRole(role: ["ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getOrganizationAverageTicket(input: GetOrganizationAverageTicketInput): OrganizationAverageTicket! @hasOrganizationRole(role: ["ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getOrganizationTotalOrders(input: GetOrganizationTotalOrdersInput): OrganizationTotalOrders! @hasOrganizationRole(role: ["ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getOrganizationCommission(input: GetOrganizationCommissionInput): SimpleOrganizationCommission! @hasOrganizationRole(role: ["ADMIN"]) @acceptTermsAndConditions @isVerified @isAuthenticated
  getOrganizationTotalOrdersByAffiliate(input: GetOrganizationTotalOrdersByAffiliateInput!): OrganizationTotalOrders!
    @hasServiceRole(role: ["ANALYST", "SALE"])
    @acceptTermsAndConditions
    @isVerified
    @isAuthenticated
  getOrganizationCommissionByAffiliate(input: GetOrganizationCommissionByAffiliateInput!): SimpleOrganizationCommission!
    @hasServiceRole(role: ["ANALYST"])
    @acceptTermsAndConditions
    @isVerified
    @isAuthenticated
}

enum OrganizationCommissionIdentifier {
  affiliate
  department
  category
  product
  seller
}

type OrganizationCommissionName {
  id: String!
  name: String!
}

input GetOrganizationCommissionByAffiliateInput {
  paid: Boolean
  startDate: Datetime
  endDate: Datetime
  serviceName: ServiceName
}

type SimpleOrganizationCommission {
  data: [OrganizationCommissionItem]!
}

type OrganizationCommissionItem {
  _id: String!
  affiliateInfo: AffiliateInfo
}

type AffiliateInfo {
  affiliateId: String!
  commission: AffiliateCommission
}

type AffiliateCommission {
  amount: Float
  payDay: String
}

type OrganizationTotalOrders {
  amount: Int!
}

type OrganizationAverageTicket {
  amount: Float!
}

type OrganizationRevenue {
  amount: Float!
}

input GetOrganizationRevenueInput {
  startDate: Datetime
  endDate: Datetime
}

input GetOrganizationCommissionInput {
  paid: Boolean
  startDate: Datetime
  endDate: Datetime
}

input GetOrganizationTotalOrdersInput {
  startDate: Datetime
  endDate: Datetime
}

input GetOrganizationTotalOrdersByAffiliateInput {
  startDate: Datetime
  endDate: Datetime
  serviceName: ServiceName!
}

input GetOrganizationAverageTicketInput {
  startDate: Datetime
  endDate: Datetime
}

input GetAllCommissionsInput {
  limit: String
  startDate: Datetime
  endDate: Datetime
  name: String
  status: OrderStatus
}

input GetOrganizationOrdersByAffiliateIdInput {
  limit: String
  startDate: Datetime
  endDate: Datetime
  name: String
  paid: Boolean
  status: OrderStatus
  serviceName: ServiceName!
}

input GetAllOrganizationOrdersInput {
  limit: String
  startDate: Datetime
  endDate: Datetime
  name: String
  status: OrderStatus
}

enum OrderStatus {
  approved
  canceled
  reproved
}

input CreateAffiliateBankValuesInput {
  name: String!
  agency: String!
  account: String!
  accountDigit: String!
  document: String!
  brazilBankId: String!
  serviceName: ServiceName!
}

input ListAffiliateShorterUrlInput {
  userOrganizationServiceId: String!
  serviceName: ServiceName!
}

input AffiliateGenerateShortenerUrlInput {
  originalUrl: String!
  serviceName: ServiceName!
}

type UserOrganizationServiceRolesUrlShortener {
  id: String!
  shortenerUrl: ShortenerUrl!
  userOrganizationService: UserOrganizationService!
  createdAt: Datetime!
  updatedAt: Datetime!
}

# VTEX TYPES RESPONSE

type AllOrders {
  offset: Int!
  limit: Int!
  count: Int!
  data: [Order]!
}

type Order {
  _id: String!
  isPaid: Boolean
  orderId: String
  organizationId: String!
  sellerOrderId: String
  type: String!
  plugoneAffiliateStatus: PlugoneAffiliateStatus!
  creationDate: String!
  value: Float!
  affiliateInfo: AffiliateInfo
  affiliateName: String
  items: [OrderItem]
  clientData: ClientData
}

type ClientData {
  name: String
  document: String
  email: String!
}

type OrderItem {
  id: String!
  image: String
  quantity: Int!
  name: String!
  price: Float!
}

enum PlugoneAffiliateStatus {
  Pending
  Approved
  Reproved
}
