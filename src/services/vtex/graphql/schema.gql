extend type Query{
  vtexDepartmentsCommissions: [VtexDepartmentsComissionsAdapted]! @hasServiceRole(role: ["ANALYST", "RESPONSIBLE", "ADMIN"]) @isVerified @isAuthenticated
  vtexAffiliateCommission(input: VtexAffiliateCommissionInput!): [VtexDepartmentsComissionsPercentage]! @ordersService
  timeToPayCommission: TimeToPayCommission! @hasServiceRole(role: ["ANALYST", "RESPONSIBLE", "ADMIN"]) @isVerified @isAuthenticated
  defaultCommission: DefaultCommission! @hasServiceRole(role: ["ANALYST", "RESPONSIBLE", "ADMIN"]) @isVerified @isAuthenticated
}

type VtexDepartmentsComissionsPercentage{
  vtexDepartmentId: String!
  percentage: Int
  payDay: String
}

input HandleTimeToPayCommissionInput{
  days: Int!
}

input HandleDefaultCommissionInput{
  percentage: Float!
}

type TimeToPayCommission{
    id: String!
    days: String!
    type: String!
    updatedAt: Datetime!
    createdAt: Datetime!
}

type DefaultCommission{
    id: String!
    percentage: Float!
    updatedAt: Datetime!
    createdAt: Datetime!
}

input VtexAffiliateCommissionInput{
  vtexDepartmentsIds: [String]!
  affiliateId: String!
}

extend type Mutation{
  handleOrganizationVtexCommission(input: HandleOrganizationVtexCommissionInput!): VtexDepartmentsComissions! @hasServiceRole(role: ["ADMIN"]) @isVerified @isAuthenticated
  handleTimeToPayCommission(input: HandleTimeToPayCommissionInput!): TimeToPayCommission! @hasServiceRole(role: ["ADMIN"]) @isVerified @isAuthenticated
  handleDefaultCommission(input: HandleDefaultCommissionInput!): DefaultCommission! @hasServiceRole(role: ["ADMIN"]) @isVerified @isAuthenticated
  verifyAndAttachVtexSecrets(input: VerifyAndAttachVtexSecretsInput!): Boolean! @hasOrganizationRole(role: ["ADMIN"]) @isVerified @isAuthenticated
}

input HandleOrganizationVtexCommissionInput {
  vtexDepartmentId: String!
  vtexCommissionPercentage: Int!
  active: Boolean!
}

type VtexDepartmentsComissions{
  id: String!
  vtexDepartmentId: String!
  organizationId: String!
  active: Boolean!
  vtexCommissionPercentage: Int!
  updatedAt: Datetime!
  createdAt: Datetime!
}

type VtexDepartmentsComissionsAdapted{
  id: String!
  name: String!
  url: String!
  active: Boolean!
  percentage: Int
}

input VerifyAndAttachVtexSecretsInput{
  xVtexApiAppKey: String!
  xVtexApiAppToken: String!
  accountName: String!
}

extend type Organization{
  vtexIntegration: VtexIntegration
}

type VtexIntegration{
  status: Boolean!
  createdAt: Datetime!
  updatedAt: Datetime!
}