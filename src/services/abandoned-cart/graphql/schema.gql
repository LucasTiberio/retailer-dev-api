extend type Query {
  getAbandonedCarts: [AbandonedCart]! @hasOrganizationRole(role: ["ADMIN"]) @vtexFeature @acceptTermsAndConditions @isVerified @isAuthenticated
  getAvailableAbandonedCartsAndMyAbandonedCarts: []
}

extend type Mutation {
  handleCart(input: HandleCartInput): Boolean!
  handleCartOrderId(input: HandleCartOrderIdInput): Boolean!
}

input HandleCartOrderIdInput {
  orderId: String!
  organizationId: String!
}

type GetAvailableAbandonedCartsAndMyAbandonedCarts {
  availableAbandonedCarts: [AbandonedCart],
  affiliateAbandonedCarts: [AbandonedCart]
}

type BlockedAffiliate {
  id: String
  date: String
}

type AbandonedCart {
  id: String!
  organizationId: String!
  orderFormId: String!
  orderId: String
  email: String!
  phone: String
  provider: String!
  items: [AbandonedCartItem]!
  status: String!
  currentAssistantAffiliateId: String
  blockedAffiliates: [BlockedAffiliate]!
  lastAssistanceDate: String
  observations: [AbandonedCartObservationItem]!
  createdAt: String!
  updatedAt: String
}

type AbandonedCartItem {
  productId: String!
  imageUrl: String!
  name: String!
  quantity: Int!
}

type AbandonedCartObservationItem {
  assistantId: String!
  content: String!
  createdAt: String!
  updatedAt: String!
}

input AbandonedCartItemInput {
  productId: String!
  imageUrl: String!
  name: String!
  quantity: Int!
}

input AbandonedCartClientProfileDataInput {
  email: String!
  phone: String
}

input HandleCartInput {
  organizationId: String!
  orderFormId: String!
  provider: String!
  clientProfileData: AbandonedCartClientProfileDataInput!
  items: [AbandonedCartItemInput]!
}
