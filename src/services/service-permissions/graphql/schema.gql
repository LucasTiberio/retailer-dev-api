extend type Query {
  userOrganizationPermissions(input: UserOrganizationPermissionsInput): [OrganizationPermissions]!
    @hasOrganizationRole(role: ["ADMIN", "MEMBER"])
    @isVerified
    @acceptTermsAndConditions
    @isAuthenticated
  userServicePermissions(input: UserServicePermissionsInput!): [ServicePermissions]!
    @hasServiceRole(role: ["ADMIN", "RESPONSIBLE", "ANALYST", "SALE"])
    @isVerified
    @acceptTermsAndConditions
    @isAuthenticated
}

input UserOrganizationPermissionsInput {
  name: PermissionName!
}

input UserServicePermissionsInput {
  name: ServicePermissionName
  serviceName: ServiceName!
}

type OrganizationPermissions {
  id: String!
  permissionName: PermissionName!
  organizationRoleName: OrganizationRoleName!
  grant: PermissionGrant!
}

type ServicePermissions {
  id: String!
  permissionName: ServicePermissionName!
  serviceRoleName: ServiceRolesName!
  grant: PermissionGrant!
  service: Service!
}

enum PermissionName {
  settings
  members
  integrations
  affiliate
}

enum ServicePermissionName {
  commission
  orders
  generateLink
  signatures
  showcase
  abandonedCarts
  payments
  members
  apps
}

enum PermissionGrant {
  write
  read
  hide
}
