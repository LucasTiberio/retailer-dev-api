# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- staging

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    env: 
      DB_USER: '$(DB_USER)'
      DB_PASSWORD: '$(DB_PASSWORD)'
      DB_DATABASE: '$(DB_DATABASE)'
      DB_PORT: '$(DB_PORT)'
      DB_HOST: '$(DB_HOST)'
      JWT_SECRET: '$(JWT_SECRET)'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo $(DB_HOST)
    # - task: Docker@2
    #   displayName: DockerBuild
    #   inputs:
    #     command: build
    #     containerRegistry: 'gabrieltamura-dockerhub'
    #     repository: 'gabrieltamurab8one/plugone-api-staging'
    #     Dockerfile: '**/Dockerfile'
    #     arguments: '--build-arg dbuser=$(DB_USER) --build-arg dbpassword=$(DB_PASSWORD) --build-arg dbdatabase=$(DB_DATABASE) --build-arg dbport=$(DB_PORT) --build-arg dbhost=$(DB_HOST) --build-arg jwtsecret=$(JWT_SECRET)'
    #     includeLatestTag: true
    #     tags: |
    #       $(Build.BuildId)
    #       latest

    # - task: Docker@2
    #   displayName: DockerPush
    #   inputs:
    #     command: push
    #     containerRegistry: 'gabrieltamura-dockerhub'
    #     repository: 'gabrieltamurab8one/plugone-api-staging'
    #     includeLatestTag: true
    #     tags: |
    #       $(Build.BuildId)
    #       latest
    
    # - task: KubectlInstaller@0
    #   inputs: 
    #     kubectlVersion: 'latest'

    # - script: |
    #     apk --no-cache add curl
    #     curl -sL https://github.com/digitalocean/doctl/releases/download/v1.27.0/doctl-1.27.0-linux-amd64.tar.gz | tar -xzv
    #     sudo mv ./doctl /usr/local/bin
    #     doctl -t $(DOCTL_TOKEN) k8s cluster kubeconfig show k8s-1-17-5-do-0-nyc1-plugone > kubeconfig.yml
    #     kubectl --kubeconfig=kubeconfig.yml apply -f ./config/graphql-users-api-staging.yaml
    #     kubectl --kubeconfig=kubeconfig.yml rollout restart deploy graphql-users-api-staging --namespace graphql-api-staging
    #     kubectl --kubeconfig=kubeconfig.yml rollout status deploy graphql-users-api-staging --namespace graphql-api-staging